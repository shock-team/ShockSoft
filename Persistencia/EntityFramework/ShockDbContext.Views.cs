//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(ShockSoft.Persistencia.EntityFramework.ShockDbContext),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets9a409100e50e148c4c55aad5f27e42783dfe99eb19db04cfe58f95cbab923f63))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework 6 Power Tools", "0.9.2.0")]
    internal sealed class ViewsForBaseEntitySets9a409100e50e148c4c55aad5f27e42783dfe99eb19db04cfe58f95cbab923f63 : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "9a409100e50e148c4c55aad5f27e42783dfe99eb19db04cfe58f95cbab923f63"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "CodeFirstDatabase.Cliente")
            {
                return GetView0();
            }

            if (extentName == "CodeFirstDatabase.Localidad")
            {
                return GetView1();
            }

            if (extentName == "CodeFirstDatabase.Pago")
            {
                return GetView2();
            }

            if (extentName == "CodeFirstDatabase.Reparacion")
            {
                return GetView3();
            }

            if (extentName == "CodeFirstDatabase.Marca")
            {
                return GetView4();
            }

            if (extentName == "CodeFirstDatabase.Producto")
            {
                return GetView5();
            }

            if (extentName == "CodeFirstDatabase.LineaCompra")
            {
                return GetView6();
            }

            if (extentName == "CodeFirstDatabase.Compra")
            {
                return GetView7();
            }

            if (extentName == "CodeFirstDatabase.Proveedor")
            {
                return GetView8();
            }

            if (extentName == "CodeFirstDatabase.LineaVenta")
            {
                return GetView9();
            }

            if (extentName == "CodeFirstDatabase.Venta")
            {
                return GetView10();
            }

            if (extentName == "CodeFirstDatabase.MetodoPago")
            {
                return GetView11();
            }

            if (extentName == "CodeFirstDatabase.Parametro")
            {
                return GetView12();
            }

            if (extentName == "CodeFirstDatabase.TipoEquipo")
            {
                return GetView13();
            }

            if (extentName == "CodeFirstDatabase.ReparacionProducto")
            {
                return GetView14();
            }

            if (extentName == "ShockDbContext.Clientes")
            {
                return GetView15();
            }

            if (extentName == "ShockDbContext.Localidads")
            {
                return GetView16();
            }

            if (extentName == "ShockDbContext.Pagos")
            {
                return GetView17();
            }

            if (extentName == "ShockDbContext.Reparaciones")
            {
                return GetView18();
            }

            if (extentName == "ShockDbContext.Marcas")
            {
                return GetView19();
            }

            if (extentName == "ShockDbContext.Productos")
            {
                return GetView20();
            }

            if (extentName == "ShockDbContext.LineasDeCompras")
            {
                return GetView21();
            }

            if (extentName == "ShockDbContext.Compras")
            {
                return GetView22();
            }

            if (extentName == "ShockDbContext.Proveedores")
            {
                return GetView23();
            }

            if (extentName == "ShockDbContext.LineasDeVentas")
            {
                return GetView24();
            }

            if (extentName == "ShockDbContext.Ventas")
            {
                return GetView25();
            }

            if (extentName == "ShockDbContext.MetodosDePago")
            {
                return GetView26();
            }

            if (extentName == "ShockDbContext.Parametros")
            {
                return GetView27();
            }

            if (extentName == "ShockDbContext.TiposDeEquipo")
            {
                return GetView28();
            }

            if (extentName == "ShockDbContext.Reparacion_Productos")
            {
                return GetView29();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Cliente.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Cliente
        [CodeFirstDatabaseSchema.Cliente](T1.Cliente_id, T1.Cliente_dni, T1.Cliente_cuit, T1.Cliente_apellido, T1.Cliente_nombre, T1.Cliente_telefono, T1.Cliente_direccion, T1.Cliente_IdLocalidad)
    FROM (
        SELECT 
            T.IdCliente AS Cliente_id, 
            T.DNI AS Cliente_dni, 
            T.CUIT AS Cliente_cuit, 
            T.Apellido AS Cliente_apellido, 
            T.Nombre AS Cliente_nombre, 
            T.Telefono AS Cliente_telefono, 
            T.Direccion AS Cliente_direccion, 
            T.IdLocalidad AS Cliente_IdLocalidad, 
            True AS _from0
        FROM ShockDbContext.Clientes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Localidad.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Localidad
        [CodeFirstDatabaseSchema.Localidad](T1.Localidad_id, T1.Localidad_nombre)
    FROM (
        SELECT 
            T.IdLocalidad AS Localidad_id, 
            T.Nombre AS Localidad_nombre, 
            True AS _from0
        FROM ShockDbContext.Localidads AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Pago.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Pago
        [CodeFirstDatabaseSchema.Pago](T1.Pago_id, T1.Pago_fecha, T1.Pago_monto, T1.Pago_descripcion, T1.Pago_IdCliente)
    FROM (
        SELECT 
            T.IdPago AS Pago_id, 
            T.Fecha AS Pago_fecha, 
            T.Monto AS Pago_monto, 
            T.Descripcion AS Pago_descripcion, 
            T.IdCliente AS Pago_IdCliente, 
            True AS _from0
        FROM ShockDbContext.Pagos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Reparacion.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Reparacion
        [CodeFirstDatabaseSchema.Reparacion](T1.Reparacion_id, T1.Reparacion_problema, T1.Reparacion_solucion, T1.[Reparacion_contraseña], T1.Reparacion_fechaIngreso, T1.Reparacion_fechaReparacion, T1.Reparacion_precio, T1.Reparacion_fueEntregado, T1.Reparacion_fueCobrado, T1.Reparacion_traeCargador, T1.Reparacion_traeCables, T1.Reparacion_IdCliente, T1.Reparacion_IdTipoEquipo, T1.Reparacion_IdMarca, T1.Reparacion_IdMetodoPago)
    FROM (
        SELECT 
            T.IdReparacion AS Reparacion_id, 
            T.Problema AS Reparacion_problema, 
            T.Solucion AS Reparacion_solucion, 
            T.[Contraseña] AS [Reparacion_contraseña], 
            T.FechaIngreso AS Reparacion_fechaIngreso, 
            T.FechaReparacion AS Reparacion_fechaReparacion, 
            T.Precio AS Reparacion_precio, 
            T.Entregado AS Reparacion_fueEntregado, 
            T.Cobrado AS Reparacion_fueCobrado, 
            T.Cargador AS Reparacion_traeCargador, 
            T.Cables AS Reparacion_traeCables, 
            T.IdCliente AS Reparacion_IdCliente, 
            T.IdTipoEquipo AS Reparacion_IdTipoEquipo, 
            T.IdMarca AS Reparacion_IdMarca, 
            T.IdMetodoPago AS Reparacion_IdMetodoPago, 
            True AS _from0
        FROM ShockDbContext.Reparaciones AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Marca.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Marca
        [CodeFirstDatabaseSchema.Marca](T1.Marca_id, T1.Marca_descripcion)
    FROM (
        SELECT 
            T.IdMarca AS Marca_id, 
            T.Descripcion AS Marca_descripcion, 
            True AS _from0
        FROM ShockDbContext.Marcas AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Producto.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Producto
        [CodeFirstDatabaseSchema.Producto](T1.Producto_id, T1.Producto_descripcion, T1.Producto_cantidad, T1.Producto_precioEnDolares, T1.Producto_enVenta, T1.Producto_porcentajeGanancia, T1.Producto_IdMarca, T1.Producto_IdParametro)
    FROM (
        SELECT 
            T.IdProducto AS Producto_id, 
            T.Descripcion AS Producto_descripcion, 
            T.Cantidad AS Producto_cantidad, 
            T.PrecioBaseDolar AS Producto_precioEnDolares, 
            T.EnVenta AS Producto_enVenta, 
            T.PorcentajeGanancia AS Producto_porcentajeGanancia, 
            T.IdMarca AS Producto_IdMarca, 
            T.IdParametro AS Producto_IdParametro, 
            True AS _from0
        FROM ShockDbContext.Productos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.LineaCompra.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing LineaCompra
        [CodeFirstDatabaseSchema.LineaCompra](T1.LineaCompra_id, T1.LineaCompra_IdCompra, T1.LineaCompra_cantidad, T1.LineaCompra_precioActual, T1.LineaCompra_IdProducto)
    FROM (
        SELECT 
            T.IdLineaCompra AS LineaCompra_id, 
            T.IdCompra AS LineaCompra_IdCompra, 
            T.Cantidad AS LineaCompra_cantidad, 
            T.PrecioActual AS LineaCompra_precioActual, 
            T.IdProducto AS LineaCompra_IdProducto, 
            True AS _from0
        FROM ShockDbContext.LineasDeCompras AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Compra.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Compra
        [CodeFirstDatabaseSchema.Compra](T1.Compra_id, T1.Compra_fecha, T1.Compra_costoTotalPesos, T1.Compra_dolarProveedor, T1.Compra_IdProveedor)
    FROM (
        SELECT 
            T.IdCompra AS Compra_id, 
            T.Fecha AS Compra_fecha, 
            T.CostoTotalPesos AS Compra_costoTotalPesos, 
            T.DolarProveedor AS Compra_dolarProveedor, 
            T.IdProveedor AS Compra_IdProveedor, 
            True AS _from0
        FROM ShockDbContext.Compras AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Proveedor.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView8()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Proveedor
        [CodeFirstDatabaseSchema.Proveedor](T1.Proveedor_id, T1.Proveedor_nombre)
    FROM (
        SELECT 
            T.IdProveedor AS Proveedor_id, 
            T.Nombre AS Proveedor_nombre, 
            True AS _from0
        FROM ShockDbContext.Proveedores AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.LineaVenta.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView9()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing LineaVenta
        [CodeFirstDatabaseSchema.LineaVenta](T1.LineaVenta_id, T1.LineaVenta_IdVenta, T1.LineaVenta_cantidad, T1.LineaVenta_precioActual, T1.LineaVenta_idProducto)
    FROM (
        SELECT 
            T.IdLineaVenta AS LineaVenta_id, 
            T.IdVenta AS LineaVenta_IdVenta, 
            T.Cantidad AS LineaVenta_cantidad, 
            T.PrecioActual AS LineaVenta_precioActual, 
            T.IdProducto AS LineaVenta_idProducto, 
            True AS _from0
        FROM ShockDbContext.LineasDeVentas AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Venta.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView10()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Venta
        [CodeFirstDatabaseSchema.Venta](T1.Venta_id, T1.Venta_fecha, T1.Venta_IdCliente, T1.Venta_IdMetodoPago)
    FROM (
        SELECT 
            T.IdVenta AS Venta_id, 
            T.Fecha AS Venta_fecha, 
            T.IdCliente AS Venta_IdCliente, 
            T.IdMetodoPago AS Venta_IdMetodoPago, 
            True AS _from0
        FROM ShockDbContext.Ventas AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.MetodoPago.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView11()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing MetodoPago
        [CodeFirstDatabaseSchema.MetodoPago](T1.MetodoPago_id, T1.MetodoPago_multiplicadorInteres, T1.MetodoPago_descripcion)
    FROM (
        SELECT 
            T.IdMetodoPago AS MetodoPago_id, 
            T.MultiplicadorInteres AS MetodoPago_multiplicadorInteres, 
            T.Descripcion AS MetodoPago_descripcion, 
            True AS _from0
        FROM ShockDbContext.MetodosDePago AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Parametro.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView12()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Parametro
        [CodeFirstDatabaseSchema.Parametro](T2.Parametro_id, T2.Parametro_descripcion, T2.Parametro_valor, T2.Parametro_Discriminator)
    FROM (
        SELECT -- Constructing Discriminator
            T1.Parametro_id, 
            T1.Parametro_descripcion, 
            T1.Parametro_valor, 
            CASE
                WHEN T1._from1 THEN 'IVA'
                WHEN T1._from2 THEN 'PrecioDolar'
                ELSE 'Parametro'
            END AS Parametro_Discriminator
        FROM (
            SELECT 
                T.IdParametro AS Parametro_id, 
                T.Descripcion AS Parametro_descripcion, 
                T.Valor AS Parametro_valor, 
                True AS _from0, 
                CASE WHEN T IS OF (ONLY [ShockSoft.Persistencia.EntityFramework.IVA]) THEN True ELSE False END AS _from1, 
                CASE WHEN T IS OF (ONLY [ShockSoft.Persistencia.EntityFramework.PrecioDolar]) THEN True ELSE False END AS _from2, 
                CASE WHEN T IS OF (ONLY [ShockSoft.Persistencia.EntityFramework.Parametro]) THEN True ELSE False END AS _from3
            FROM ShockDbContext.Parametros AS T
        ) AS T1
    ) AS T2");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.TipoEquipo.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView13()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TipoEquipo
        [CodeFirstDatabaseSchema.TipoEquipo](T1.TipoEquipo_id, T1.TipoEquipo_descripcion)
    FROM (
        SELECT 
            T.IdTipoEquipo AS TipoEquipo_id, 
            T.Descripcion AS TipoEquipo_descripcion, 
            True AS _from0
        FROM ShockDbContext.TiposDeEquipo AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ReparacionProducto.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView14()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ReparacionProducto
        [CodeFirstDatabaseSchema.ReparacionProducto](T1.ReparacionProducto_IdProducto, T1.ReparacionProducto_IdReparacion)
    FROM (
        SELECT 
            Key(T.Reparacion_Productos_Source).IdReparacion AS ReparacionProducto_IdProducto, 
            Key(T.Reparacion_Productos_Target).IdProducto AS ReparacionProducto_IdReparacion, 
            True AS _from0
        FROM ShockDbContext.Reparacion_Productos AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ShockDbContext.Clientes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView15()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Clientes
        [ShockSoft.Persistencia.EntityFramework.Cliente](T1.Cliente_IdCliente, T1.Cliente_DNI, T1.Cliente_CUIT, T1.Cliente_Apellido, T1.Cliente_Nombre, T1.Cliente_Telefono, T1.Cliente_Direccion, T1.Cliente_IdLocalidad)
    FROM (
        SELECT 
            T.id AS Cliente_IdCliente, 
            T.dni AS Cliente_DNI, 
            T.cuit AS Cliente_CUIT, 
            T.apellido AS Cliente_Apellido, 
            T.nombre AS Cliente_Nombre, 
            T.telefono AS Cliente_Telefono, 
            T.direccion AS Cliente_Direccion, 
            T.IdLocalidad AS Cliente_IdLocalidad, 
            True AS _from0
        FROM CodeFirstDatabase.Cliente AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ShockDbContext.Localidads.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView16()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Localidads
        [ShockSoft.Persistencia.EntityFramework.Localidad](T1.Localidad_IdLocalidad, T1.Localidad_Nombre)
    FROM (
        SELECT 
            T.id AS Localidad_IdLocalidad, 
            T.nombre AS Localidad_Nombre, 
            True AS _from0
        FROM CodeFirstDatabase.Localidad AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ShockDbContext.Pagos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView17()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Pagos
        [ShockSoft.Persistencia.EntityFramework.Pago](T1.Pago_IdPago, T1.Pago_Fecha, T1.Pago_Monto, T1.Pago_Descripcion, T1.Pago_IdCliente)
    FROM (
        SELECT 
            T.id AS Pago_IdPago, 
            T.fecha AS Pago_Fecha, 
            T.monto AS Pago_Monto, 
            T.descripcion AS Pago_Descripcion, 
            T.IdCliente AS Pago_IdCliente, 
            True AS _from0
        FROM CodeFirstDatabase.Pago AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ShockDbContext.Reparaciones.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView18()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Reparaciones
        [ShockSoft.Persistencia.EntityFramework.Reparacion](T1.Reparacion_IdReparacion, T1.Reparacion_Problema, T1.Reparacion_Solucion, T1.[Reparacion_Contraseña], T1.Reparacion_FechaIngreso, T1.Reparacion_FechaReparacion, T1.Reparacion_Precio, T1.Reparacion_Entregado, T1.Reparacion_Cobrado, T1.Reparacion_Cargador, T1.Reparacion_Cables, T1.Reparacion_IdCliente, T1.Reparacion_IdTipoEquipo, T1.Reparacion_IdMarca, T1.Reparacion_IdMetodoPago)
    FROM (
        SELECT 
            T.id AS Reparacion_IdReparacion, 
            T.problema AS Reparacion_Problema, 
            T.solucion AS Reparacion_Solucion, 
            T.[contraseña] AS [Reparacion_Contraseña], 
            T.fechaIngreso AS Reparacion_FechaIngreso, 
            T.fechaReparacion AS Reparacion_FechaReparacion, 
            T.precio AS Reparacion_Precio, 
            T.fueEntregado AS Reparacion_Entregado, 
            T.fueCobrado AS Reparacion_Cobrado, 
            T.traeCargador AS Reparacion_Cargador, 
            T.traeCables AS Reparacion_Cables, 
            T.IdCliente AS Reparacion_IdCliente, 
            T.IdTipoEquipo AS Reparacion_IdTipoEquipo, 
            T.IdMarca AS Reparacion_IdMarca, 
            T.IdMetodoPago AS Reparacion_IdMetodoPago, 
            True AS _from0
        FROM CodeFirstDatabase.Reparacion AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ShockDbContext.Marcas.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView19()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Marcas
        [ShockSoft.Persistencia.EntityFramework.Marca](T1.Marca_IdMarca, T1.Marca_Descripcion)
    FROM (
        SELECT 
            T.id AS Marca_IdMarca, 
            T.descripcion AS Marca_Descripcion, 
            True AS _from0
        FROM CodeFirstDatabase.Marca AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ShockDbContext.Productos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView20()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Productos
        [ShockSoft.Persistencia.EntityFramework.Producto](T1.Producto_IdProducto, T1.Producto_Descripcion, T1.Producto_Cantidad, T1.Producto_PrecioBaseDolar, T1.Producto_EnVenta, T1.Producto_PorcentajeGanancia, T1.Producto_IdMarca, T1.Producto_IdParametro)
    FROM (
        SELECT 
            T.id AS Producto_IdProducto, 
            T.descripcion AS Producto_Descripcion, 
            T.cantidad AS Producto_Cantidad, 
            T.precioEnDolares AS Producto_PrecioBaseDolar, 
            T.enVenta AS Producto_EnVenta, 
            T.porcentajeGanancia AS Producto_PorcentajeGanancia, 
            T.IdMarca AS Producto_IdMarca, 
            T.IdParametro AS Producto_IdParametro, 
            True AS _from0
        FROM CodeFirstDatabase.Producto AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ShockDbContext.LineasDeCompras.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView21()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing LineasDeCompras
        [ShockSoft.Persistencia.EntityFramework.LineaCompra](T1.LineaCompra_IdLineaCompra, T1.LineaCompra_IdCompra, T1.LineaCompra_Cantidad, T1.LineaCompra_PrecioActual, T1.LineaCompra_IdProducto)
    FROM (
        SELECT 
            T.id AS LineaCompra_IdLineaCompra, 
            T.IdCompra AS LineaCompra_IdCompra, 
            T.cantidad AS LineaCompra_Cantidad, 
            T.precioActual AS LineaCompra_PrecioActual, 
            T.IdProducto AS LineaCompra_IdProducto, 
            True AS _from0
        FROM CodeFirstDatabase.LineaCompra AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ShockDbContext.Compras.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView22()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Compras
        [ShockSoft.Persistencia.EntityFramework.Compra](T1.Compra_IdCompra, T1.Compra_Fecha, T1.Compra_CostoTotalPesos, T1.Compra_DolarProveedor, T1.Compra_IdProveedor)
    FROM (
        SELECT 
            T.id AS Compra_IdCompra, 
            T.fecha AS Compra_Fecha, 
            T.costoTotalPesos AS Compra_CostoTotalPesos, 
            T.dolarProveedor AS Compra_DolarProveedor, 
            T.IdProveedor AS Compra_IdProveedor, 
            True AS _from0
        FROM CodeFirstDatabase.Compra AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ShockDbContext.Proveedores.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView23()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Proveedores
        [ShockSoft.Persistencia.EntityFramework.Proveedor](T1.Proveedor_IdProveedor, T1.Proveedor_Nombre)
    FROM (
        SELECT 
            T.id AS Proveedor_IdProveedor, 
            T.nombre AS Proveedor_Nombre, 
            True AS _from0
        FROM CodeFirstDatabase.Proveedor AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ShockDbContext.LineasDeVentas.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView24()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing LineasDeVentas
        [ShockSoft.Persistencia.EntityFramework.LineaVenta](T1.LineaVenta_IdLineaVenta, T1.LineaVenta_IdVenta, T1.LineaVenta_Cantidad, T1.LineaVenta_PrecioActual, T1.LineaVenta_IdProducto)
    FROM (
        SELECT 
            T.id AS LineaVenta_IdLineaVenta, 
            T.IdVenta AS LineaVenta_IdVenta, 
            T.cantidad AS LineaVenta_Cantidad, 
            T.precioActual AS LineaVenta_PrecioActual, 
            T.idProducto AS LineaVenta_IdProducto, 
            True AS _from0
        FROM CodeFirstDatabase.LineaVenta AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ShockDbContext.Ventas.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView25()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Ventas
        [ShockSoft.Persistencia.EntityFramework.Venta](T1.Venta_IdVenta, T1.Venta_Fecha, T1.Venta_IdCliente, T1.Venta_IdMetodoPago)
    FROM (
        SELECT 
            T.id AS Venta_IdVenta, 
            T.fecha AS Venta_Fecha, 
            T.IdCliente AS Venta_IdCliente, 
            T.IdMetodoPago AS Venta_IdMetodoPago, 
            True AS _from0
        FROM CodeFirstDatabase.Venta AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ShockDbContext.MetodosDePago.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView26()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing MetodosDePago
        [ShockSoft.Persistencia.EntityFramework.MetodoPago](T1.MetodoPago_IdMetodoPago, T1.MetodoPago_MultiplicadorInteres, T1.MetodoPago_Descripcion)
    FROM (
        SELECT 
            T.id AS MetodoPago_IdMetodoPago, 
            T.multiplicadorInteres AS MetodoPago_MultiplicadorInteres, 
            T.descripcion AS MetodoPago_Descripcion, 
            True AS _from0
        FROM CodeFirstDatabase.MetodoPago AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ShockDbContext.Parametros.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView27()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Parametros
        CASE
            WHEN T1._from3 THEN [ShockSoft.Persistencia.EntityFramework.Parametro](T1.Parametro_IdParametro, T1.Parametro_Descripcion, T1.Parametro_Valor)
            WHEN T1._from1 THEN [ShockSoft.Persistencia.EntityFramework.IVA](T1.Parametro_IdParametro, T1.Parametro_Descripcion, T1.Parametro_Valor)
            ELSE [ShockSoft.Persistencia.EntityFramework.PrecioDolar](T1.Parametro_IdParametro, T1.Parametro_Descripcion, T1.Parametro_Valor)
        END
    FROM (
        SELECT 
            T.id AS Parametro_IdParametro, 
            T.descripcion AS Parametro_Descripcion, 
            T.valor AS Parametro_Valor, 
            True AS _from0, 
            CASE WHEN T.Discriminator = 'IVA' THEN True ELSE False END AS _from1, 
            CASE WHEN T.Discriminator = 'PrecioDolar' THEN True ELSE False END AS _from2, 
            CASE WHEN T.Discriminator = 'Parametro' THEN True ELSE False END AS _from3
        FROM CodeFirstDatabase.Parametro AS T
        WHERE T.Discriminator IN {'IVA', 'PrecioDolar', 'Parametro'}
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ShockDbContext.TiposDeEquipo.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView28()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TiposDeEquipo
        [ShockSoft.Persistencia.EntityFramework.TipoEquipo](T1.TipoEquipo_IdTipoEquipo, T1.TipoEquipo_Descripcion)
    FROM (
        SELECT 
            T.id AS TipoEquipo_IdTipoEquipo, 
            T.descripcion AS TipoEquipo_Descripcion, 
            True AS _from0
        FROM CodeFirstDatabase.TipoEquipo AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ShockDbContext.Reparacion_Productos.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView29()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Reparacion_Productos
        [ShockSoft.Persistencia.EntityFramework.Reparacion_Productos](T3.[Reparacion_Productos.Reparacion_Productos_Source], T3.[Reparacion_Productos.Reparacion_Productos_Target])
    FROM (
        SELECT -- Constructing Reparacion_Productos_Source
            CreateRef(ShockDbContext.Reparaciones, row(T2.[Reparacion_Productos.Reparacion_Productos_Source.IdReparacion]), [ShockSoft.Persistencia.EntityFramework.Reparacion]) AS [Reparacion_Productos.Reparacion_Productos_Source], 
            T2.[Reparacion_Productos.Reparacion_Productos_Target]
        FROM (
            SELECT -- Constructing Reparacion_Productos_Target
                T1.[Reparacion_Productos.Reparacion_Productos_Source.IdReparacion], 
                CreateRef(ShockDbContext.Productos, row(T1.[Reparacion_Productos.Reparacion_Productos_Target.IdProducto]), [ShockSoft.Persistencia.EntityFramework.Producto]) AS [Reparacion_Productos.Reparacion_Productos_Target]
            FROM (
                SELECT 
                    T.IdProducto AS [Reparacion_Productos.Reparacion_Productos_Source.IdReparacion], 
                    T.IdReparacion AS [Reparacion_Productos.Reparacion_Productos_Target.IdProducto], 
                    True AS _from0
                FROM CodeFirstDatabase.ReparacionProducto AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
    }
}
